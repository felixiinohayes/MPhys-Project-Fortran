//
// time: Sun Feb 11 01:25:04 2024
//
// version: 3.2.0 (format), 4.4.4 (DX)
//
//
// MODULE main
// workspace: width = 1296, height = 650
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node FileSelector[1]: x = 0, y = 2, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "/Users/James/Desktop/GitHub/MPhys-Project-Fortran/top_surface_ene.dx"
    // output[2]: visible = 1, type = 32, value = "top_surface_ene.dx"
    //
    // 
    // node Import[1]: x = 8, y = 82, inputs = 6, label = Import
    //
main_Import_1_out_1 = 
    Import(
    main_FileSelector_1_out_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Integer[1]: x = 542, y = 57, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_1"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 6 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 0
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 9
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 6 
    //
    // 
    // node Compute[2]: x = 20, y = 165, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "select($0,$1)"
    // expression: value = select(a,b)
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_2_out_1 = 
    Compute(
    main_Compute_2_in_1,
    main_Import_1_out_1,
    main_Integer_1_out_1
    ) [instance: 2, cache: 1];
    // 
    // node AutoColor[1]: x = 18, y = 244, inputs = 10, label = AutoColor
    //
main_AutoColor_1_out_1,
main_AutoColor_1_out_2 = 
    AutoColor(
    main_Compute_2_out_1,
    main_AutoColor_1_in_2,
    main_AutoColor_1_in_3,
    main_AutoColor_1_in_4,
    main_AutoColor_1_in_5,
    main_AutoColor_1_in_6,
    main_AutoColor_1_in_7,
    main_AutoColor_1_in_8,
    main_AutoColor_1_in_9,
    main_AutoColor_1_in_10
    ) [instance: 1, cache: 1];
    // 
    // node Compute[3]: x = 185, y = 169, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "select($0,$1+1)"
    // expression: value = select(a,b+1)
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_3_out_1 = 
    Compute(
    main_Compute_3_in_1,
    main_Import_1_out_1,
    main_Integer_1_out_1
    ) [instance: 3, cache: 1];
    // 
    // node AutoColor[2]: x = 182, y = 241, inputs = 10, label = AutoColor
    //
main_AutoColor_2_out_1,
main_AutoColor_2_out_2 = 
    AutoColor(
    main_Compute_3_out_1,
    main_AutoColor_2_in_2,
    main_AutoColor_2_in_3,
    main_AutoColor_2_in_4,
    main_AutoColor_2_in_5,
    main_AutoColor_2_in_6,
    main_AutoColor_2_in_7,
    main_AutoColor_2_in_8,
    main_AutoColor_2_in_9,
    main_AutoColor_2_in_10
    ) [instance: 2, cache: 1];
    // 
    // node Compute[5]: x = 348, y = 183, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "select($0,$1+2)"
    // expression: value = select(a,b+2)
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_5_out_1 = 
    Compute(
    main_Compute_5_in_1,
    main_Import_1_out_1,
    main_Integer_1_out_1
    ) [instance: 5, cache: 1];
    // 
    // node AutoColor[3]: x = 345, y = 255, inputs = 10, label = AutoColor
    //
main_AutoColor_3_out_1,
main_AutoColor_3_out_2 = 
    AutoColor(
    main_Compute_5_out_1,
    main_AutoColor_3_in_2,
    main_AutoColor_3_in_3,
    main_AutoColor_3_in_4,
    main_AutoColor_3_in_5,
    main_AutoColor_3_in_6,
    main_AutoColor_3_in_7,
    main_AutoColor_3_in_8,
    main_AutoColor_3_in_9,
    main_AutoColor_3_in_10
    ) [instance: 3, cache: 1];
    // 
    // node Compute[7]: x = 515, y = 164, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "select($0,$1+3)"
    // expression: value = select(a,b+3)
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_7_out_1 = 
    Compute(
    main_Compute_7_in_1,
    main_Import_1_out_1,
    main_Integer_1_out_1
    ) [instance: 7, cache: 1];
    // 
    // node AutoColor[4]: x = 513, y = 243, inputs = 10, label = AutoColor
    //
main_AutoColor_4_out_1,
main_AutoColor_4_out_2 = 
    AutoColor(
    main_Compute_7_out_1,
    main_AutoColor_4_in_2,
    main_AutoColor_4_in_3,
    main_AutoColor_4_in_4,
    main_AutoColor_4_in_5,
    main_AutoColor_4_in_6,
    main_AutoColor_4_in_7,
    main_AutoColor_4_in_8,
    main_AutoColor_4_in_9,
    main_AutoColor_4_in_10
    ) [instance: 4, cache: 1];
    // 
    // node Compute[8]: x = 681, y = 165, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "select($0,$1+4)"
    // expression: value = select(a,b+4)
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_8_out_1 = 
    Compute(
    main_Compute_8_in_1,
    main_Import_1_out_1,
    main_Integer_1_out_1
    ) [instance: 8, cache: 1];
    // 
    // node AutoColor[5]: x = 678, y = 237, inputs = 10, label = AutoColor
    //
main_AutoColor_5_out_1,
main_AutoColor_5_out_2 = 
    AutoColor(
    main_Compute_8_out_1,
    main_AutoColor_5_in_2,
    main_AutoColor_5_in_3,
    main_AutoColor_5_in_4,
    main_AutoColor_5_in_5,
    main_AutoColor_5_in_6,
    main_AutoColor_5_in_7,
    main_AutoColor_5_in_8,
    main_AutoColor_5_in_9,
    main_AutoColor_5_in_10
    ) [instance: 5, cache: 1];
    // 
    // node Compute[9]: x = 843, y = 164, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "select($0,$1+5)"
    // expression: value = select(a,b+5)
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_9_out_1 = 
    Compute(
    main_Compute_9_in_1,
    main_Import_1_out_1,
    main_Integer_1_out_1
    ) [instance: 9, cache: 1];
    // 
    // node AutoColor[6]: x = 840, y = 237, inputs = 10, label = AutoColor
    //
main_AutoColor_6_out_1,
main_AutoColor_6_out_2 = 
    AutoColor(
    main_Compute_9_out_1,
    main_AutoColor_6_in_2,
    main_AutoColor_6_in_3,
    main_AutoColor_6_in_4,
    main_AutoColor_6_in_5,
    main_AutoColor_6_in_6,
    main_AutoColor_6_in_7,
    main_AutoColor_6_in_8,
    main_AutoColor_6_in_9,
    main_AutoColor_6_in_10
    ) [instance: 6, cache: 1];
    // 
    // node Compute[13]: x = 813, y = 401, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "select($0,$1+6)"
    // expression: value = select(a,b+6)
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_13_out_1 = 
    Compute(
    main_Compute_13_in_1,
    main_Import_1_out_1,
    main_Integer_1_out_1
    ) [instance: 13, cache: 1];
    // 
    // node AutoColor[7]: x = 811, y = 480, inputs = 10, label = AutoColor
    //
main_AutoColor_7_out_1,
main_AutoColor_7_out_2 = 
    AutoColor(
    main_Compute_13_out_1,
    main_AutoColor_7_in_2,
    main_AutoColor_7_in_3,
    main_AutoColor_7_in_4,
    main_AutoColor_7_in_5,
    main_AutoColor_7_in_6,
    main_AutoColor_7_in_7,
    main_AutoColor_7_in_8,
    main_AutoColor_7_in_9,
    main_AutoColor_7_in_10
    ) [instance: 7, cache: 1];
    // 
    // node Compute[14]: x = 979, y = 402, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "select($0,$1+7)"
    // expression: value = select(a,b+7)
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_14_out_1 = 
    Compute(
    main_Compute_14_in_1,
    main_Import_1_out_1,
    main_Integer_1_out_1
    ) [instance: 14, cache: 1];
    // 
    // node AutoColor[8]: x = 976, y = 474, inputs = 10, label = AutoColor
    //
main_AutoColor_8_out_1,
main_AutoColor_8_out_2 = 
    AutoColor(
    main_Compute_14_out_1,
    main_AutoColor_8_in_2,
    main_AutoColor_8_in_3,
    main_AutoColor_8_in_4,
    main_AutoColor_8_in_5,
    main_AutoColor_8_in_6,
    main_AutoColor_8_in_7,
    main_AutoColor_8_in_8,
    main_AutoColor_8_in_9,
    main_AutoColor_8_in_10
    ) [instance: 8, cache: 1];
    // 
    // node Compute[15]: x = 1141, y = 401, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "select($0,$1+8)"
    // expression: value = select(a,b+8)
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_15_out_1 = 
    Compute(
    main_Compute_15_in_1,
    main_Import_1_out_1,
    main_Integer_1_out_1
    ) [instance: 15, cache: 1];
    // 
    // node AutoColor[9]: x = 1138, y = 474, inputs = 10, label = AutoColor
    //
main_AutoColor_9_out_1,
main_AutoColor_9_out_2 = 
    AutoColor(
    main_Compute_15_out_1,
    main_AutoColor_9_in_2,
    main_AutoColor_9_in_3,
    main_AutoColor_9_in_4,
    main_AutoColor_9_in_5,
    main_AutoColor_9_in_6,
    main_AutoColor_9_in_7,
    main_AutoColor_9_in_8,
    main_AutoColor_9_in_9,
    main_AutoColor_9_in_10
    ) [instance: 9, cache: 1];
    // 
    // node Mark[1]: x = 102, y = 180, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    //
main_Mark_1_out_1 = 
    Mark(
    main_AutoColor_1_out_1,
    main_Mark_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Compute[1]: x = 99, y = 293, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0,$0.1,$1]"
    // expression: value = [a.0,a.1,b]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_1_out_1 = 
    Compute(
    main_Compute_1_in_1,
    main_Mark_1_out_1,
    main_Compute_2_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Unmark[1]: x = 22, y = 323, inputs = 2, label = Unmark
    //
main_Unmark_1_out_1 = 
    Unmark(
    main_Compute_1_out_1,
    main_Unmark_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Mark[2]: x = 265, y = 187, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    //
main_Mark_2_out_1 = 
    Mark(
    main_AutoColor_2_out_1,
    main_Mark_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node Compute[4]: x = 271, y = 256, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0,$0.1,$1]"
    // expression: value = [a.0,a.1,b]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_4_out_1 = 
    Compute(
    main_Compute_4_in_1,
    main_Mark_2_out_1,
    main_Compute_3_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Unmark[2]: x = 192, y = 312, inputs = 2, label = Unmark
    //
main_Unmark_2_out_1 = 
    Unmark(
    main_Compute_4_out_1,
    main_Unmark_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node Mark[3]: x = 428, y = 201, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    //
main_Mark_3_out_1 = 
    Mark(
    main_AutoColor_3_out_1,
    main_Mark_3_in_2
    ) [instance: 3, cache: 1];
    // 
    // node Compute[6]: x = 434, y = 270, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0,$0.1,$1]"
    // expression: value = [a.0,a.1,b]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_6_out_1 = 
    Compute(
    main_Compute_6_in_1,
    main_Mark_3_out_1,
    main_Compute_5_out_1
    ) [instance: 6, cache: 1];
    // 
    // node Unmark[3]: x = 355, y = 326, inputs = 2, label = Unmark
    //
main_Unmark_3_out_1 = 
    Unmark(
    main_Compute_6_out_1,
    main_Unmark_3_in_2
    ) [instance: 3, cache: 1];
    // 
    // node Mark[4]: x = 597, y = 179, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    //
main_Mark_4_out_1 = 
    Mark(
    main_AutoColor_4_out_1,
    main_Mark_4_in_2
    ) [instance: 4, cache: 1];
    // 
    // node Compute[10]: x = 596, y = 257, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0,$0.1,$1]"
    // expression: value = [a.0,a.1,b]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_10_out_1 = 
    Compute(
    main_Compute_10_in_1,
    main_Mark_4_out_1,
    main_Compute_7_out_1
    ) [instance: 10, cache: 1];
    // 
    // node Unmark[4]: x = 517, y = 322, inputs = 2, label = Unmark
    //
main_Unmark_4_out_1 = 
    Unmark(
    main_Compute_10_out_1,
    main_Unmark_4_in_2
    ) [instance: 4, cache: 1];
    // 
    // node Mark[5]: x = 761, y = 183, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    //
main_Mark_5_out_1 = 
    Mark(
    main_AutoColor_5_out_1,
    main_Mark_5_in_2
    ) [instance: 5, cache: 1];
    // 
    // node Compute[11]: x = 767, y = 252, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0,$0.1,$1]"
    // expression: value = [a.0,a.1,b]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_11_out_1 = 
    Compute(
    main_Compute_11_in_1,
    main_Mark_5_out_1,
    main_Compute_8_out_1
    ) [instance: 11, cache: 1];
    // 
    // node Unmark[5]: x = 688, y = 308, inputs = 2, label = Unmark
    //
main_Unmark_5_out_1 = 
    Unmark(
    main_Compute_11_out_1,
    main_Unmark_5_in_2
    ) [instance: 5, cache: 1];
    // 
    // node Mark[6]: x = 923, y = 183, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    //
main_Mark_6_out_1 = 
    Mark(
    main_AutoColor_6_out_1,
    main_Mark_6_in_2
    ) [instance: 6, cache: 1];
    // 
    // node Compute[12]: x = 929, y = 252, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0,$0.1,$1]"
    // expression: value = [a.0,a.1,b]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_12_out_1 = 
    Compute(
    main_Compute_12_in_1,
    main_Mark_6_out_1,
    main_Compute_9_out_1
    ) [instance: 12, cache: 1];
    // 
    // node Unmark[6]: x = 850, y = 308, inputs = 2, label = Unmark
    //
main_Unmark_6_out_1 = 
    Unmark(
    main_Compute_12_out_1,
    main_Unmark_6_in_2
    ) [instance: 6, cache: 1];
    // 
    // node Mark[7]: x = 895, y = 416, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    //
main_Mark_7_out_1 = 
    Mark(
    main_AutoColor_7_out_1,
    main_Mark_7_in_2
    ) [instance: 7, cache: 1];
    // 
    // node Compute[16]: x = 894, y = 494, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0,$0.1,$1]"
    // expression: value = [a.0,a.1,b]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_16_out_1 = 
    Compute(
    main_Compute_16_in_1,
    main_Mark_7_out_1,
    main_Compute_13_out_1
    ) [instance: 16, cache: 1];
    // 
    // node Unmark[7]: x = 815, y = 559, inputs = 2, label = Unmark
    //
main_Unmark_7_out_1 = 
    Unmark(
    main_Compute_16_out_1,
    main_Unmark_7_in_2
    ) [instance: 7, cache: 1];
    // 
    // node Mark[8]: x = 1059, y = 420, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    //
main_Mark_8_out_1 = 
    Mark(
    main_AutoColor_8_out_1,
    main_Mark_8_in_2
    ) [instance: 8, cache: 1];
    // 
    // node Compute[17]: x = 1065, y = 489, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0,$0.1,$1]"
    // expression: value = [a.0,a.1,b]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_17_out_1 = 
    Compute(
    main_Compute_17_in_1,
    main_Mark_8_out_1,
    main_Compute_14_out_1
    ) [instance: 17, cache: 1];
    // 
    // node Unmark[8]: x = 986, y = 557, inputs = 2, label = Unmark
    //
main_Unmark_8_out_1 = 
    Unmark(
    main_Compute_17_out_1,
    main_Unmark_8_in_2
    ) [instance: 8, cache: 1];
    // 
    // node Mark[9]: x = 1221, y = 420, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    //
main_Mark_9_out_1 = 
    Mark(
    main_AutoColor_9_out_1,
    main_Mark_9_in_2
    ) [instance: 9, cache: 1];
    // 
    // node Compute[18]: x = 1227, y = 489, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0,$0.1,$1]"
    // expression: value = [a.0,a.1,b]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_18_out_1 = 
    Compute(
    main_Compute_18_in_1,
    main_Mark_9_out_1,
    main_Compute_15_out_1
    ) [instance: 18, cache: 1];
    // 
    // node Unmark[9]: x = 1146, y = 562, inputs = 2, label = Unmark
    //
main_Unmark_9_out_1 = 
    Unmark(
    main_Compute_18_out_1,
    main_Unmark_9_in_2
    ) [instance: 9, cache: 1];
    // 
    // node Collect[8]: x = 693, y = 509, inputs = 2, label = Collect
    //
main_Collect_8_out_1 = 
    Collect(
    main_Unmark_8_out_1,
    main_Unmark_9_out_1
    ) [instance: 8, cache: 1];
    // 
    // node Collect[7]: x = 601, y = 487, inputs = 2, label = Collect
    //
main_Collect_7_out_1 = 
    Collect(
    main_Unmark_7_out_1,
    main_Collect_8_out_1
    ) [instance: 7, cache: 1];
    // 
    // node Collect[6]: x = 525, y = 490, inputs = 2, label = Collect
    //
main_Collect_6_out_1 = 
    Collect(
    main_Unmark_6_out_1,
    main_Collect_7_out_1
    ) [instance: 6, cache: 1];
    // 
    // node Collect[5]: x = 448, y = 496, inputs = 2, label = Collect
    //
main_Collect_5_out_1 = 
    Collect(
    main_Unmark_5_out_1,
    main_Collect_6_out_1
    ) [instance: 5, cache: 1];
    // 
    // node Collect[4]: x = 386, y = 492, inputs = 2, label = Collect
    //
main_Collect_4_out_1 = 
    Collect(
    main_Unmark_4_out_1,
    main_Collect_5_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Collect[3]: x = 324, y = 490, inputs = 2, label = Collect
    //
main_Collect_3_out_1 = 
    Collect(
    main_Unmark_3_out_1,
    main_Collect_4_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Collect[2]: x = 259, y = 490, inputs = 2, label = Collect
    //
main_Collect_2_out_1 = 
    Collect(
    main_Unmark_2_out_1,
    main_Collect_3_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Collect[1]: x = 184, y = 518, inputs = 2, label = Collect
    //
main_Collect_1_out_1 = 
    Collect(
    main_Unmark_1_out_1,
    main_Collect_2_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Shade[1]: x = 164, y = 588, inputs = 8, label = Shade
    //
main_Shade_1_out_1 = 
    Shade(
    main_Collect_1_out_1,
    main_Shade_1_in_2,
    main_Shade_1_in_3,
    main_Shade_1_in_4,
    main_Shade_1_in_5,
    main_Shade_1_in_6,
    main_Shade_1_in_7,
    main_Shade_1_in_8
    ) [instance: 1, cache: 1];
    // 
    // node Image[1]: x = 249, y = 584, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_1"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [0.50001 0.50001 1.39567]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [2.77615 -3.46227 10.1273]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 5.2813
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 640
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.75
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [-0.392776 0.794601 0.462964]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[29]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[33]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[36]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "rotate"
    // depth: value = 24
    // window: position = (0.5422,0.0641), size = 0.4449x0.5674, screen = 0
    // internal caching: 1
    //
main_Image_1_out_1,
main_Image_1_out_2,
main_Image_1_out_3 = 
    Image(
    main_Image_1_in_1,
    main_Shade_1_out_1,
    main_Image_1_in_3,
    main_Image_1_in_4,
    main_Image_1_in_5,
    main_Image_1_in_6,
    main_Image_1_in_7,
    main_Image_1_in_8,
    main_Image_1_in_9,
    main_Image_1_in_10,
    main_Image_1_in_11,
    main_Image_1_in_12,
    main_Image_1_in_13,
    main_Image_1_in_14,
    main_Image_1_in_15,
    main_Image_1_in_16,
    main_Image_1_in_17,
    main_Image_1_in_18,
    main_Image_1_in_19,
    main_Image_1_in_20,
    main_Image_1_in_21,
    main_Image_1_in_22,
    main_Image_1_in_23,
    main_Image_1_in_24,
    main_Image_1_in_25,
    main_Image_1_in_26,
    main_Image_1_in_27,
    main_Image_1_in_28,
    main_Image_1_in_29,
    main_Image_1_in_30,
    main_Image_1_in_31,
    main_Image_1_in_32,
    main_Image_1_in_33,
    main_Image_1_in_34,
    main_Image_1_in_35,
    main_Image_1_in_36,
    main_Image_1_in_37,
    main_Image_1_in_38,
    main_Image_1_in_39,
    main_Image_1_in_40,
    main_Image_1_in_41,
    main_Image_1_in_42,
    main_Image_1_in_43,
    main_Image_1_in_44,
    main_Image_1_in_45,
    main_Image_1_in_46,
    main_Image_1_in_47,
    main_Image_1_in_48,
    main_Image_1_in_49
    ) [instance: 1, cache: 1];
// network: end of macro body
CacheScene(main_Image_1_in_1, main_Image_1_out_1, main_Image_1_out_2);
}
main_FileSelector_1_out_1 = "/Users/James/Desktop/GitHub/MPhys-Project-Fortran/top_surface_ene.dx";
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = NULL;
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Integer_1_in_1 = "Integer_1";
main_Integer_1_in_2 = NULL;
main_Integer_1_in_3 = 6 ;
main_Integer_1_in_4 = NULL;
main_Integer_1_in_5 = NULL;
main_Integer_1_in_6 = NULL;
main_Integer_1_in_7 = NULL;
main_Integer_1_in_8 = NULL;
main_Integer_1_in_9 = NULL;
main_Integer_1_in_10 = NULL;
main_Integer_1_in_11 = NULL;
main_Integer_1_out_1 = 6 ;
main_Compute_2_in_1 = "select($0,$1)";
main_Compute_2_out_1 = NULL;
main_AutoColor_1_in_2 = NULL;
main_AutoColor_1_in_3 = NULL;
main_AutoColor_1_in_4 = NULL;
main_AutoColor_1_in_5 = NULL;
main_AutoColor_1_in_6 = NULL;
main_AutoColor_1_in_7 = NULL;
main_AutoColor_1_in_8 = NULL;
main_AutoColor_1_in_9 = NULL;
main_AutoColor_1_in_10 = NULL;
main_AutoColor_1_out_1 = NULL;
main_Compute_3_in_1 = "select($0,$1+1)";
main_Compute_3_out_1 = NULL;
main_AutoColor_2_in_2 = NULL;
main_AutoColor_2_in_3 = NULL;
main_AutoColor_2_in_4 = NULL;
main_AutoColor_2_in_5 = NULL;
main_AutoColor_2_in_6 = NULL;
main_AutoColor_2_in_7 = NULL;
main_AutoColor_2_in_8 = NULL;
main_AutoColor_2_in_9 = NULL;
main_AutoColor_2_in_10 = NULL;
main_AutoColor_2_out_1 = NULL;
main_Compute_5_in_1 = "select($0,$1+2)";
main_Compute_5_out_1 = NULL;
main_AutoColor_3_in_2 = NULL;
main_AutoColor_3_in_3 = NULL;
main_AutoColor_3_in_4 = NULL;
main_AutoColor_3_in_5 = NULL;
main_AutoColor_3_in_6 = NULL;
main_AutoColor_3_in_7 = NULL;
main_AutoColor_3_in_8 = NULL;
main_AutoColor_3_in_9 = NULL;
main_AutoColor_3_in_10 = NULL;
main_AutoColor_3_out_1 = NULL;
main_Compute_7_in_1 = "select($0,$1+3)";
main_Compute_7_out_1 = NULL;
main_AutoColor_4_in_2 = NULL;
main_AutoColor_4_in_3 = NULL;
main_AutoColor_4_in_4 = NULL;
main_AutoColor_4_in_5 = NULL;
main_AutoColor_4_in_6 = NULL;
main_AutoColor_4_in_7 = NULL;
main_AutoColor_4_in_8 = NULL;
main_AutoColor_4_in_9 = NULL;
main_AutoColor_4_in_10 = NULL;
main_AutoColor_4_out_1 = NULL;
main_Compute_8_in_1 = "select($0,$1+4)";
main_Compute_8_out_1 = NULL;
main_AutoColor_5_in_2 = NULL;
main_AutoColor_5_in_3 = NULL;
main_AutoColor_5_in_4 = NULL;
main_AutoColor_5_in_5 = NULL;
main_AutoColor_5_in_6 = NULL;
main_AutoColor_5_in_7 = NULL;
main_AutoColor_5_in_8 = NULL;
main_AutoColor_5_in_9 = NULL;
main_AutoColor_5_in_10 = NULL;
main_AutoColor_5_out_1 = NULL;
main_Compute_9_in_1 = "select($0,$1+5)";
main_Compute_9_out_1 = NULL;
main_AutoColor_6_in_2 = NULL;
main_AutoColor_6_in_3 = NULL;
main_AutoColor_6_in_4 = NULL;
main_AutoColor_6_in_5 = NULL;
main_AutoColor_6_in_6 = NULL;
main_AutoColor_6_in_7 = NULL;
main_AutoColor_6_in_8 = NULL;
main_AutoColor_6_in_9 = NULL;
main_AutoColor_6_in_10 = NULL;
main_AutoColor_6_out_1 = NULL;
main_Compute_13_in_1 = "select($0,$1+6)";
main_Compute_13_out_1 = NULL;
main_AutoColor_7_in_2 = NULL;
main_AutoColor_7_in_3 = NULL;
main_AutoColor_7_in_4 = NULL;
main_AutoColor_7_in_5 = NULL;
main_AutoColor_7_in_6 = NULL;
main_AutoColor_7_in_7 = NULL;
main_AutoColor_7_in_8 = NULL;
main_AutoColor_7_in_9 = NULL;
main_AutoColor_7_in_10 = NULL;
main_AutoColor_7_out_1 = NULL;
main_Compute_14_in_1 = "select($0,$1+7)";
main_Compute_14_out_1 = NULL;
main_AutoColor_8_in_2 = NULL;
main_AutoColor_8_in_3 = NULL;
main_AutoColor_8_in_4 = NULL;
main_AutoColor_8_in_5 = NULL;
main_AutoColor_8_in_6 = NULL;
main_AutoColor_8_in_7 = NULL;
main_AutoColor_8_in_8 = NULL;
main_AutoColor_8_in_9 = NULL;
main_AutoColor_8_in_10 = NULL;
main_AutoColor_8_out_1 = NULL;
main_Compute_15_in_1 = "select($0,$1+8)";
main_Compute_15_out_1 = NULL;
main_AutoColor_9_in_2 = NULL;
main_AutoColor_9_in_3 = NULL;
main_AutoColor_9_in_4 = NULL;
main_AutoColor_9_in_5 = NULL;
main_AutoColor_9_in_6 = NULL;
main_AutoColor_9_in_7 = NULL;
main_AutoColor_9_in_8 = NULL;
main_AutoColor_9_in_9 = NULL;
main_AutoColor_9_in_10 = NULL;
main_AutoColor_9_out_1 = NULL;
main_Mark_1_in_2 = "positions";
main_Mark_1_out_1 = NULL;
main_Compute_1_in_1 = "[$0.0,$0.1,$1]";
main_Compute_1_out_1 = NULL;
main_Unmark_1_in_2 = NULL;
main_Unmark_1_out_1 = NULL;
main_Mark_2_in_2 = "positions";
main_Mark_2_out_1 = NULL;
main_Compute_4_in_1 = "[$0.0,$0.1,$1]";
main_Compute_4_out_1 = NULL;
main_Unmark_2_in_2 = NULL;
main_Unmark_2_out_1 = NULL;
main_Mark_3_in_2 = "positions";
main_Mark_3_out_1 = NULL;
main_Compute_6_in_1 = "[$0.0,$0.1,$1]";
main_Compute_6_out_1 = NULL;
main_Unmark_3_in_2 = NULL;
main_Unmark_3_out_1 = NULL;
main_Mark_4_in_2 = "positions";
main_Mark_4_out_1 = NULL;
main_Compute_10_in_1 = "[$0.0,$0.1,$1]";
main_Compute_10_out_1 = NULL;
main_Unmark_4_in_2 = NULL;
main_Unmark_4_out_1 = NULL;
main_Mark_5_in_2 = "positions";
main_Mark_5_out_1 = NULL;
main_Compute_11_in_1 = "[$0.0,$0.1,$1]";
main_Compute_11_out_1 = NULL;
main_Unmark_5_in_2 = NULL;
main_Unmark_5_out_1 = NULL;
main_Mark_6_in_2 = "positions";
main_Mark_6_out_1 = NULL;
main_Compute_12_in_1 = "[$0.0,$0.1,$1]";
main_Compute_12_out_1 = NULL;
main_Unmark_6_in_2 = NULL;
main_Unmark_6_out_1 = NULL;
main_Mark_7_in_2 = "positions";
main_Mark_7_out_1 = NULL;
main_Compute_16_in_1 = "[$0.0,$0.1,$1]";
main_Compute_16_out_1 = NULL;
main_Unmark_7_in_2 = NULL;
main_Unmark_7_out_1 = NULL;
main_Mark_8_in_2 = "positions";
main_Mark_8_out_1 = NULL;
main_Compute_17_in_1 = "[$0.0,$0.1,$1]";
main_Compute_17_out_1 = NULL;
main_Unmark_8_in_2 = NULL;
main_Unmark_8_out_1 = NULL;
main_Mark_9_in_2 = "positions";
main_Mark_9_out_1 = NULL;
main_Compute_18_in_1 = "[$0.0,$0.1,$1]";
main_Compute_18_out_1 = NULL;
main_Unmark_9_in_2 = NULL;
main_Unmark_9_out_1 = NULL;
main_Collect_8_out_1 = NULL;
main_Collect_7_out_1 = NULL;
main_Collect_6_out_1 = NULL;
main_Collect_5_out_1 = NULL;
main_Collect_4_out_1 = NULL;
main_Collect_3_out_1 = NULL;
main_Collect_2_out_1 = NULL;
main_Collect_1_out_1 = NULL;
main_Shade_1_in_2 = NULL;
main_Shade_1_in_3 = NULL;
main_Shade_1_in_4 = NULL;
main_Shade_1_in_5 = NULL;
main_Shade_1_in_6 = NULL;
main_Shade_1_in_7 = NULL;
main_Shade_1_in_8 = NULL;
main_Shade_1_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_1_in_1 = "Image_1";
main_Image_1_in_3 = "X24,,";
main_Image_1_in_4 = 1;
main_Image_1_in_5 = [0.50001 0.50001 1.39567];
main_Image_1_in_6 = [2.77615 -3.46227 10.1273];
main_Image_1_in_7 = 5.2813;
main_Image_1_in_8 = 640;
main_Image_1_in_9 = 0.75;
main_Image_1_in_10 = [-0.392776 0.794601 0.462964];
main_Image_1_in_11 = NULL;
main_Image_1_in_12 = 0;
main_Image_1_in_13 = NULL;
main_Image_1_in_14 = 1;
main_Image_1_in_15 = NULL;
main_Image_1_in_16 = NULL;
main_Image_1_in_17 = NULL;
main_Image_1_in_18 = NULL;
main_Image_1_in_19 = 0;
main_Image_1_in_20 = NULL;
main_Image_1_in_21 = NULL;
main_Image_1_in_22 = NULL;
main_Image_1_in_23 = NULL;
main_Image_1_in_25 = NULL;
main_Image_1_in_26 = NULL;
main_Image_1_in_27 = NULL;
main_Image_1_in_28 = NULL;
main_Image_1_in_29 = 1;
main_Image_1_in_30 = NULL;
main_Image_1_in_31 = NULL;
main_Image_1_in_32 = NULL;
main_Image_1_in_33 = 1;
main_Image_1_in_34 = NULL;
main_Image_1_in_35 = NULL;
main_Image_1_in_36 = 1;
main_Image_1_in_37 = NULL;
main_Image_1_in_38 = NULL;
main_Image_1_in_39 = NULL;
main_Image_1_in_40 = NULL;
main_Image_1_in_41 = "rotate";
main_Image_1_in_42 = NULL;
main_Image_1_in_43 = NULL;
main_Image_1_in_44 = NULL;
main_Image_1_in_45 = NULL;
main_Image_1_in_46 = NULL;
main_Image_1_in_47 = NULL;
main_Image_1_in_48 = NULL;
main_Image_1_in_49 = NULL;
Executive("product version 4 4 4");
$sync
main();
