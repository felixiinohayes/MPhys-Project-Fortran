//
// time: Wed May  8 16:38:17 2024
//
// version: 3.2.0 (format), 4.4.4 (DX)
//
//
// MODULE main
// workspace: width = 739, height = 621
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node FileSelector[1]: x = 29, y = 10, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "/Users/James/Desktop/GitHub/MPhys-Project-Fortran/DOS_cube_B00Z_7.dx"
    // output[2]: visible = 1, type = 32, value = "DOS_cube_B00Z_7.dx"
    //
    // 
    // node Import[1]: x = 231, y = 31, inputs = 6, label = Import
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[5]: defaulting = 0, visible = 0, type = 1, value = 199
    //
main_Import_1_out_1 = 
    Import(
    main_FileSelector_1_out_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Sequencer[1]: x = 380, y = 29, inputs = 7, label = Sequencer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Sequencer_1"
    // input[4]: defaulting = 1, visible = 1, type = 1, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 1, value = 100
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 0, visible = 0, type = 16777217, value = { 1 100 1 1 100 1 }
    // vcr[1]: min = 1, max = 100, beg = 1, end = 100, cur = 1, inc = 1, loop = off, step = off, pal = off
    // window: position = (0.2163,0.2772), size = 0.1905x0.0870, screen = 0
    //
    main_Sequencer_1_out_1 = @frame;
    // 
    // node Integer[2]: x = 372, y = 95, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_2"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 1
    //
main_Integer_2_out_1[cache: 2] = 
    Integer(
    main_Integer_2_in_1,
    main_Sequencer_1_out_1,
    main_Integer_2_in_3,
    main_Integer_2_in_4,
    main_Integer_2_in_5,
    main_Integer_2_in_6,
    main_Integer_2_in_7,
    main_Integer_2_in_8,
    main_Integer_2_in_9,
    main_Integer_2_in_10,
    main_Integer_2_in_11
    ) [instance: 2, cache: 1];
    // 
    // node Select[1]: x = 153, y = 86, inputs = 3, label = Select
    // input[2]: defaulting = 1, visible = 1, type = 1, value = 1
    //
main_Select_1_out_1 = 
    Select(
    main_Import_1_out_1,
    main_Integer_2_out_1,
    main_Select_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Sample[7]: x = 73, y = 372, inputs = 2, label = Sample
    // input[2]: defaulting = 0, visible = 1, type = 1, value = 9000
    //
main_Sample_7_out_1 = 
    Sample(
    main_Select_1_out_1,
    main_Sample_7_in_2
    ) [instance: 7, cache: 1];
    // 
    // node AutoGlyph[1]: x = 12, y = 453, inputs = 7, label = AutoGlyph
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "cube"
    // input[4]: defaulting = 0, visible = 1, type = 5, value = 1.5
    // input[5]: defaulting = 0, visible = 1, type = 5, value = 1.0
    //
main_AutoGlyph_1_out_1 = 
    AutoGlyph(
    main_Sample_7_out_1,
    main_AutoGlyph_1_in_2,
    main_AutoGlyph_1_in_3,
    main_AutoGlyph_1_in_4,
    main_AutoGlyph_1_in_5,
    main_AutoGlyph_1_in_6,
    main_AutoGlyph_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Slab[1]: x = 17, y = 168, inputs = 4, label = Slab
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "x"
    // input[3]: defaulting = 0, visible = 1, type = 1, value = 0
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 0
    //
main_Slab_1_out_1 = 
    Slab(
    main_Select_1_out_1,
    main_Slab_1_in_2,
    main_Slab_1_in_3,
    main_Slab_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Integer[3]: x = 57, y = 100, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_3"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 502 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = -1000000
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1000000
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 502 
    //
    // 
    // node Sample[1]: x = 51, y = 243, inputs = 2, label = Sample
    // input[2]: defaulting = 1, visible = 1, type = 1, value = 2000
    //
main_Sample_1_out_1 = 
    Sample(
    main_Slab_1_out_1,
    main_Integer_3_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Slab[3]: x = 232, y = 174, inputs = 4, label = Slab
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "x"
    // input[3]: defaulting = 0, visible = 1, type = 1, value = 2
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 0
    //
main_Slab_3_out_1 = 
    Slab(
    main_Select_1_out_1,
    main_Slab_3_in_2,
    main_Slab_3_in_3,
    main_Slab_3_in_4
    ) [instance: 3, cache: 1];
    // 
    // node Sample[3]: x = 254, y = 247, inputs = 2, label = Sample
    // input[2]: defaulting = 1, visible = 1, type = 1, value = 2000
    //
main_Sample_3_out_1 = 
    Sample(
    main_Slab_3_out_1,
    main_Integer_3_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Slab[5]: x = 438, y = 171, inputs = 4, label = Slab
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "x"
    // input[3]: defaulting = 0, visible = 1, type = 1, value = 4
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 0
    //
main_Slab_5_out_1 = 
    Slab(
    main_Select_1_out_1,
    main_Slab_5_in_2,
    main_Slab_5_in_3,
    main_Slab_5_in_4
    ) [instance: 5, cache: 1];
    // 
    // node Sample[5]: x = 464, y = 249, inputs = 2, label = Sample
    // input[2]: defaulting = 1, visible = 1, type = 1, value = 2000
    //
main_Sample_5_out_1 = 
    Sample(
    main_Slab_5_out_1,
    main_Integer_3_out_1
    ) [instance: 5, cache: 1];
    // 
    // node Slab[7]: x = 643, y = 179, inputs = 4, label = Slab
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "x"
    // input[3]: defaulting = 0, visible = 1, type = 1, value = 6
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 0
    //
main_Slab_7_out_1 = 
    Slab(
    main_Select_1_out_1,
    main_Slab_7_in_2,
    main_Slab_7_in_3,
    main_Slab_7_in_4
    ) [instance: 7, cache: 1];
    // 
    // node Sample[8]: x = 668, y = 253, inputs = 2, label = Sample
    // input[2]: defaulting = 1, visible = 1, type = 1, value = 2000
    //
main_Sample_8_out_1 = 
    Sample(
    main_Slab_7_out_1,
    main_Integer_3_out_1
    ) [instance: 8, cache: 1];
    // 
    // node Collect[1]: x = 431, y = 373, inputs = 7, label = Collect
    //
main_Collect_1_out_1 = 
    Collect(
    main_Sample_1_out_1,
    main_Collect_1_in_2,
    main_Sample_3_out_1,
    main_Collect_1_in_4,
    main_Sample_5_out_1,
    main_Collect_1_in_6,
    main_Sample_8_out_1
    ) [instance: 1, cache: 1];
    // 
    // node AutoGlyph[2]: x = 474, y = 461, inputs = 7, label = AutoGlyph
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "cube"
    // input[4]: defaulting = 0, visible = 1, type = 5, value = 0.75
    // input[5]: defaulting = 0, visible = 1, type = 5, value = 1.0
    //
main_AutoGlyph_2_out_1 = 
    AutoGlyph(
    main_Collect_1_out_1,
    main_AutoGlyph_2_in_2,
    main_AutoGlyph_2_in_3,
    main_AutoGlyph_2_in_4,
    main_AutoGlyph_2_in_5,
    main_AutoGlyph_2_in_6,
    main_AutoGlyph_2_in_7
    ) [instance: 2, cache: 1];
    // 
    // node Colormap[1]: x = 224, y = 414, inputs = 19, label = Colormap
    // input[1]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0031446541 0.0] [1.0 0.14736842] }
    // input[2]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.73684211] [0.40251572 0.61052632] [0.63207547 0.38947368] [1.0 0.0] }
    // input[3]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.021052632] [0.06918239 0.62105263] [0.20125786 0.88421053] [0.30503145 1.0] [1.0 1.0] }
    // input[4]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[5]: defaulting = 0, visible = 0, type = 32, value = "Colormap_1"
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.2292209
    // input[8]: defaulting = 1, visible = 0, type = 5, value = 1.6459638
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 20
    // input[12]: defaulting = 0, visible = 0, type = 16777221, value = { 1.2292209 1.6459638 }
    // input[17]: defaulting = 0, visible = 0, type = 5, value = 1.2292209
    // input[18]: defaulting = 0, visible = 0, type = 5, value = 1.6459638
    // window: position = (0.0320,0.3022), size = 0.4422x0.4891, screen = 0
    //
main_Colormap_1_out_1[cache: 2],
main_Colormap_1_out_2[cache: 2] = 
    Colormap(
    main_Colormap_1_in_1,
    main_Colormap_1_in_2,
    main_Colormap_1_in_3,
    main_Colormap_1_in_4,
    main_Colormap_1_in_5,
    main_Select_1_out_1,
    main_Colormap_1_in_7,
    main_Colormap_1_in_8,
    main_Colormap_1_in_9,
    main_Colormap_1_in_10,
    main_Colormap_1_in_11,
    main_Colormap_1_in_12,
    main_Colormap_1_in_13,
    main_Colormap_1_in_14,
    main_Colormap_1_in_15,
    main_Colormap_1_in_16,
    main_Colormap_1_in_17,
    main_Colormap_1_in_18,
    main_Colormap_1_in_19
    ) [instance: 1, cache: 1];
    // 
    // node Color[1]: x = 226, y = 505, inputs = 5, label = Color
    //
main_Color_1_out_1 = 
    Color(
    main_AutoGlyph_1_out_1,
    main_Colormap_1_out_1,
    main_Colormap_1_out_2,
    main_Color_1_in_4,
    main_Color_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Colormap[2]: x = 500, y = 97, inputs = 19, label = Colormap
    // input[1]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0031446541 0.0] [1.0 0.084210526] }
    // input[2]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.73684211] [0.40251572 0.61052632] [0.63207547 0.38947368] [1.0 0.010526316] }
    // input[3]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.021052632] [0.078616352 0.57894737] [0.20125786 0.88421053] [0.30503145 1.0] [1.0 1.0] }
    // input[4]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[5]: defaulting = 0, visible = 0, type = 32, value = "Colormap_2"
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 0.0
    // input[8]: defaulting = 1, visible = 0, type = 5, value = 0.89353865
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 20
    // input[12]: defaulting = 0, visible = 0, type = 16777221, value = { 0.0 0.89353865 }
    // input[17]: defaulting = 0, visible = 0, type = 5, value = 0.0
    // input[18]: defaulting = 0, visible = 0, type = 5, value = 0.89353865
    // window: position = (0.0320,0.2739), size = 0.4422x0.4891, screen = 0
    //
main_Colormap_2_out_1[cache: 2],
main_Colormap_2_out_2[cache: 2] = 
    Colormap(
    main_Colormap_2_in_1,
    main_Colormap_2_in_2,
    main_Colormap_2_in_3,
    main_Colormap_2_in_4,
    main_Colormap_2_in_5,
    main_Colormap_2_in_6,
    main_Colormap_2_in_7,
    main_Colormap_2_in_8,
    main_Colormap_2_in_9,
    main_Colormap_2_in_10,
    main_Colormap_2_in_11,
    main_Colormap_2_in_12,
    main_Colormap_2_in_13,
    main_Colormap_2_in_14,
    main_Colormap_2_in_15,
    main_Colormap_2_in_16,
    main_Colormap_2_in_17,
    main_Colormap_2_in_18,
    main_Colormap_2_in_19
    ) [instance: 2, cache: 1];
    // 
    // node Mark[1]: x = 590, y = 94, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    //
main_Mark_1_out_1 = 
    Mark(
    main_Mark_1_in_1,
    main_Mark_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Compute[1]: x = 561, y = 6, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "($0.0<5 && $0.1<5 && $0.2<5)&&($0.0>0 && $0.1>0 && $0.2>0)?[$0.0,$0.1,$0.2]:[0,0,0]"
    // expression: value = (a.0<5 && a.1<5 && a.2<5)&&(a.0>0 && a.1>0 && a.2>0)?[a.0,a.1,a.2]:[0,0,0]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_1_out_1 = 
    Compute(
    main_Compute_1_in_1,
    main_Mark_1_out_1,
    main_Compute_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Shade[1]: x = 348, y = 515, inputs = 8, label = Shade
    // input[4]: defaulting = 1, visible = 0, type = 5, value = 10.0
    // input[5]: defaulting = 0, visible = 0, type = 1, value = 1000
    // input[6]: defaulting = 0, visible = 0, type = 5, value = 0.5
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 5.0
    //
main_Shade_1_out_1 = 
    Shade(
    main_Color_1_out_1,
    main_Shade_1_in_2,
    main_Shade_1_in_3,
    main_Shade_1_in_4,
    main_Shade_1_in_5,
    main_Shade_1_in_6,
    main_Shade_1_in_7,
    main_Shade_1_in_8
    ) [instance: 1, cache: 1];
    // 
    // node Image[1]: x = 132, y = 559, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_1"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [3 3 3]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [-7.68352 -13.5298 14.6087]
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 12.2454
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 749
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.85
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0.235593 0.451958 0.860366]
    // input[11]: defaulting = 0, visible = 0, type = 5, value = 30.0
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[22]: defaulting = 0, visible = 0, type = 32, value = "grey90"
    // input[25]: defaulting = 0, visible = 0, type = 32, value = "/Users/James/Desktop/cube_slab_lightgrey.tiff"
    // input[26]: defaulting = 0, visible = 0, type = 32, value = "tiff gamma=1"
    // input[27]: defaulting = 0, visible = 0, type = 1, value = 2000
    // input[28]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[29]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[30]: defaulting = 0, visible = 0, type = 16777248, value = {"x", "y", "z"}
    // input[31]: defaulting = 0, visible = 0, type = 1, value = -15
    // input[32]: defaulting = 0, visible = 0, type = 16777224, value = {[-0.5 -0.5 -0.5] [6.5 6.5 6.5]}
    // input[34]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[36]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[37]: defaulting = 0, visible = 0, type = 16777248, value = {"grey30", "grey40", "grey40", "white"}
    // input[38]: defaulting = 0, visible = 0, type = 16777248, value = {"background", "grid", "ticks", "labels"}
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "rotate"
    // depth: value = 24
    // window: position = (0.5667,0.0609), size = 0.5190x0.7370, screen = 0
    // internal caching: 1
    //
main_Image_1_out_1,
main_Image_1_out_2,
main_Image_1_out_3 = 
    Image(
    main_Image_1_in_1,
    main_Shade_1_out_1,
    main_Image_1_in_3,
    main_Image_1_in_4,
    main_Image_1_in_5,
    main_Image_1_in_6,
    main_Image_1_in_7,
    main_Image_1_in_8,
    main_Image_1_in_9,
    main_Image_1_in_10,
    main_Image_1_in_11,
    main_Image_1_in_12,
    main_Image_1_in_13,
    main_Image_1_in_14,
    main_Image_1_in_15,
    main_Image_1_in_16,
    main_Image_1_in_17,
    main_Image_1_in_18,
    main_Image_1_in_19,
    main_Image_1_in_20,
    main_Image_1_in_21,
    main_Image_1_in_22,
    main_Image_1_in_23,
    main_Image_1_in_24,
    main_Image_1_in_25,
    main_Image_1_in_26,
    main_Image_1_in_27,
    main_Image_1_in_28,
    main_Image_1_in_29,
    main_Image_1_in_30,
    main_Image_1_in_31,
    main_Image_1_in_32,
    main_Image_1_in_33,
    main_Image_1_in_34,
    main_Image_1_in_35,
    main_Image_1_in_36,
    main_Image_1_in_37,
    main_Image_1_in_38,
    main_Image_1_in_39,
    main_Image_1_in_40,
    main_Image_1_in_41,
    main_Image_1_in_42,
    main_Image_1_in_43,
    main_Image_1_in_44,
    main_Image_1_in_45,
    main_Image_1_in_46,
    main_Image_1_in_47,
    main_Image_1_in_48,
    main_Image_1_in_49
    ) [instance: 1, cache: 1];
    // 
    // node Slab[2]: x = 127, y = 172, inputs = 4, label = Slab
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "x"
    // input[3]: defaulting = 0, visible = 1, type = 1, value = 1
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 0
    //
main_Slab_2_out_1 = 
    Slab(
    main_Select_1_out_1,
    main_Slab_2_in_2,
    main_Slab_2_in_3,
    main_Slab_2_in_4
    ) [instance: 2, cache: 1];
    // 
    // node Sample[2]: x = 140, y = 245, inputs = 2, label = Sample
    // input[2]: defaulting = 1, visible = 1, type = 1, value = 2000
    //
main_Sample_2_out_1 = 
    Sample(
    main_Slab_2_out_1,
    main_Sample_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node Slab[4]: x = 334, y = 173, inputs = 4, label = Slab
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "x"
    // input[3]: defaulting = 0, visible = 1, type = 1, value = 3
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 0
    //
main_Slab_4_out_1 = 
    Slab(
    main_Select_1_out_1,
    main_Slab_4_in_2,
    main_Slab_4_in_3,
    main_Slab_4_in_4
    ) [instance: 4, cache: 1];
    // 
    // node Sample[4]: x = 355, y = 247, inputs = 2, label = Sample
    // input[2]: defaulting = 0, visible = 1, type = 1, value = 2000
    //
main_Sample_4_out_1 = 
    Sample(
    main_Slab_4_out_1,
    main_Sample_4_in_2
    ) [instance: 4, cache: 1];
    // 
    // node Slab[6]: x = 541, y = 174, inputs = 4, label = Slab
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "x"
    // input[3]: defaulting = 0, visible = 1, type = 1, value = 5
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 0
    //
main_Slab_6_out_1 = 
    Slab(
    main_Select_1_out_1,
    main_Slab_6_in_2,
    main_Slab_6_in_3,
    main_Slab_6_in_4
    ) [instance: 6, cache: 1];
    // 
    // node Sample[6]: x = 567, y = 252, inputs = 2, label = Sample
    // input[2]: defaulting = 0, visible = 1, type = 1, value = 2000
    //
main_Sample_6_out_1 = 
    Sample(
    main_Slab_6_out_1,
    main_Sample_6_in_2
    ) [instance: 6, cache: 1];
    // 
    // node Unmark[1]: x = 497, y = 24, inputs = 2, label = Unmark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    //
main_Unmark_1_out_1 = 
    Unmark(
    main_Compute_1_out_1,
    main_Unmark_1_in_2
    ) [instance: 1, cache: 1];
// network: end of macro body
CacheScene(main_Image_1_in_1, main_Image_1_out_1, main_Image_1_out_2);
}
main_FileSelector_1_out_1 = "/Users/James/Desktop/GitHub/MPhys-Project-Fortran/DOS_cube_B00Z_7.dx";
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = NULL;
main_Import_1_in_4 = 0;
main_Import_1_in_5 = 199;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Sequencer_1_in_1 = "Sequencer_1";
main_Sequencer_1_in_2 = NULL;
main_Sequencer_1_in_3 = NULL;
main_Sequencer_1_in_4 = NULL;
main_Sequencer_1_in_5 = NULL;
main_Sequencer_1_in_6 = NULL;
main_Sequencer_1_in_7 = { 1 100 1 1 100 1 };
main_Sequencer_1_out_1 = NULL;

@startframe = 1;
@nextframe  = @startframe;
@endframe   = 100;
@deltaframe = 1;
main_Integer_2_in_1 = "Integer_2";
main_Integer_2_in_3 = 1;
main_Integer_2_in_4 = NULL;
main_Integer_2_in_5 = NULL;
main_Integer_2_in_6 = NULL;
main_Integer_2_in_7 = NULL;
main_Integer_2_in_8 = NULL;
main_Integer_2_in_9 = NULL;
main_Integer_2_in_10 = NULL;
main_Integer_2_in_11 = NULL;
main_Integer_2_out_1 = 1;
main_Select_1_in_3 = NULL;
main_Select_1_out_1 = NULL;
main_Sample_7_in_2 = 9000;
main_Sample_7_out_1 = NULL;
main_AutoGlyph_1_in_2 = "cube";
main_AutoGlyph_1_in_3 = NULL;
main_AutoGlyph_1_in_4 = 1.5;
main_AutoGlyph_1_in_5 = 1.0;
main_AutoGlyph_1_in_6 = NULL;
main_AutoGlyph_1_in_7 = NULL;
main_AutoGlyph_1_out_1 = NULL;
main_Slab_1_in_2 = "x";
main_Slab_1_in_3 = 0;
main_Slab_1_in_4 = 0;
main_Slab_1_out_1 = NULL;
main_Integer_3_in_1 = "Integer_3";
main_Integer_3_in_2 = NULL;
main_Integer_3_in_3 = 502 ;
main_Integer_3_in_4 = NULL;
main_Integer_3_in_5 = NULL;
main_Integer_3_in_6 = NULL;
main_Integer_3_in_7 = NULL;
main_Integer_3_in_8 = NULL;
main_Integer_3_in_9 = NULL;
main_Integer_3_in_10 = NULL;
main_Integer_3_in_11 = NULL;
main_Integer_3_out_1 = 502 ;
main_Sample_1_out_1 = NULL;
main_Slab_3_in_2 = "x";
main_Slab_3_in_3 = 2;
main_Slab_3_in_4 = 0;
main_Slab_3_out_1 = NULL;
main_Sample_3_out_1 = NULL;
main_Slab_5_in_2 = "x";
main_Slab_5_in_3 = 4;
main_Slab_5_in_4 = 0;
main_Slab_5_out_1 = NULL;
main_Sample_5_out_1 = NULL;
main_Slab_7_in_2 = "x";
main_Slab_7_in_3 = 6;
main_Slab_7_in_4 = 0;
main_Slab_7_out_1 = NULL;
main_Sample_8_out_1 = NULL;
main_Collect_1_in_2 = NULL;
main_Collect_1_in_4 = NULL;
main_Collect_1_in_6 = NULL;
main_Collect_1_out_1 = NULL;
main_AutoGlyph_2_in_2 = "cube";
main_AutoGlyph_2_in_3 = NULL;
main_AutoGlyph_2_in_4 = 0.75;
main_AutoGlyph_2_in_5 = 1.0;
main_AutoGlyph_2_in_6 = NULL;
main_AutoGlyph_2_in_7 = NULL;
main_Colormap_1_in_1 = { [0.0031446541 0.0] [1.0 0.14736842] };
main_Colormap_1_in_2 = { [0.0 0.73684211] [0.40251572 0.61052632] [0.63207547 0.38947368] [1.0 0.0] };
main_Colormap_1_in_3 = { [0.0 0.021052632] [0.06918239 0.62105263] [0.20125786 0.88421053] [0.30503145 1.0] [1.0 1.0] };
main_Colormap_1_in_4 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_1_in_5 = "Colormap_1";
main_Colormap_1_in_7 = NULL;
main_Colormap_1_in_8 = NULL;
main_Colormap_1_in_9 = NULL;
main_Colormap_1_in_10 = NULL;
main_Colormap_1_in_11 = NULL;
main_Colormap_1_in_12 = { 1.2292209 1.6459638 };
main_Colormap_1_in_13 = NULL;
main_Colormap_1_in_14 = NULL;
main_Colormap_1_in_15 = NULL;
main_Colormap_1_in_16 = NULL;
main_Colormap_1_in_17 = 1.2292209;
main_Colormap_1_in_18 = 1.6459638;
main_Colormap_1_in_19 = NULL;
main_Colormap_1_out_1 = NULL;
main_Colormap_1_out_2 = NULL;
main_Color_1_in_4 = NULL;
main_Color_1_in_5 = NULL;
main_Color_1_out_1 = NULL;
main_Colormap_2_in_1 = { [0.0031446541 0.0] [1.0 0.084210526] };
main_Colormap_2_in_2 = { [0.0 0.73684211] [0.40251572 0.61052632] [0.63207547 0.38947368] [1.0 0.010526316] };
main_Colormap_2_in_3 = { [0.0 0.021052632] [0.078616352 0.57894737] [0.20125786 0.88421053] [0.30503145 1.0] [1.0 1.0] };
main_Colormap_2_in_4 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_2_in_5 = "Colormap_2";
main_Colormap_2_in_6 = NULL;
main_Colormap_2_in_7 = NULL;
main_Colormap_2_in_8 = NULL;
main_Colormap_2_in_9 = NULL;
main_Colormap_2_in_10 = NULL;
main_Colormap_2_in_11 = NULL;
main_Colormap_2_in_12 = { 0.0 0.89353865 };
main_Colormap_2_in_13 = NULL;
main_Colormap_2_in_14 = NULL;
main_Colormap_2_in_15 = NULL;
main_Colormap_2_in_16 = NULL;
main_Colormap_2_in_17 = 0.0;
main_Colormap_2_in_18 = 0.89353865;
main_Colormap_2_in_19 = NULL;
main_Mark_1_in_1 = NULL;
main_Mark_1_in_2 = "positions";
main_Mark_1_out_1 = NULL;
main_Compute_1_in_1 = "($0.0<5 && $0.1<5 && $0.2<5)&&($0.0>0 && $0.1>0 && $0.2>0)?[$0.0,$0.1,$0.2]:[0,0,0]";
main_Compute_1_in_3 = NULL;
main_Compute_1_out_1 = NULL;
main_Shade_1_in_2 = NULL;
main_Shade_1_in_3 = NULL;
main_Shade_1_in_4 = NULL;
main_Shade_1_in_5 = 1000;
main_Shade_1_in_6 = 0.5;
main_Shade_1_in_7 = 5.0;
main_Shade_1_in_8 = NULL;
main_Shade_1_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_1_in_1 = "Image_1";
main_Image_1_in_3 = "X24,,";
main_Image_1_in_4 = 1;
main_Image_1_in_5 = [3 3 3];
main_Image_1_in_6 = [-7.68352 -13.5298 14.6087];
main_Image_1_in_7 = NULL;
main_Image_1_in_8 = 749;
main_Image_1_in_9 = 0.85;
main_Image_1_in_10 = [0.235593 0.451958 0.860366];
main_Image_1_in_11 = 30.0;
main_Image_1_in_12 = 1;
main_Image_1_in_13 = NULL;
main_Image_1_in_14 = 1;
main_Image_1_in_15 = NULL;
main_Image_1_in_16 = NULL;
main_Image_1_in_17 = NULL;
main_Image_1_in_18 = NULL;
main_Image_1_in_19 = 0;
main_Image_1_in_20 = NULL;
main_Image_1_in_21 = NULL;
main_Image_1_in_22 = "grey90";
main_Image_1_in_23 = NULL;
main_Image_1_in_25 = "/Users/James/Desktop/cube_slab_lightgrey.tiff";
main_Image_1_in_26 = "tiff gamma=1";
main_Image_1_in_27 = 2000;
main_Image_1_in_28 = 1.0;
main_Image_1_in_29 = 0;
main_Image_1_in_30 = {"x", "y", "z"};
main_Image_1_in_31 = -15;
main_Image_1_in_32 = {[-0.5 -0.5 -0.5] [6.5 6.5 6.5]};
main_Image_1_in_33 = NULL;
main_Image_1_in_34 = 0;
main_Image_1_in_35 = NULL;
main_Image_1_in_36 = 1;
main_Image_1_in_37 = {"grey30", "grey40", "grey40", "white"};
main_Image_1_in_38 = {"background", "grid", "ticks", "labels"};
main_Image_1_in_39 = NULL;
main_Image_1_in_40 = NULL;
main_Image_1_in_41 = "rotate";
main_Image_1_in_42 = NULL;
main_Image_1_in_43 = NULL;
main_Image_1_in_44 = NULL;
main_Image_1_in_45 = NULL;
main_Image_1_in_46 = NULL;
main_Image_1_in_47 = NULL;
main_Image_1_in_48 = NULL;
main_Image_1_in_49 = NULL;
main_Slab_2_in_2 = "x";
main_Slab_2_in_3 = 1;
main_Slab_2_in_4 = 0;
main_Slab_2_out_1 = NULL;
main_Sample_2_in_2 = NULL;
main_Slab_4_in_2 = "x";
main_Slab_4_in_3 = 3;
main_Slab_4_in_4 = 0;
main_Slab_4_out_1 = NULL;
main_Sample_4_in_2 = 2000;
main_Slab_6_in_2 = "x";
main_Slab_6_in_3 = 5;
main_Slab_6_in_4 = 0;
main_Slab_6_out_1 = NULL;
main_Sample_6_in_2 = 2000;
main_Unmark_1_in_2 = "positions";
Executive("product version 4 4 4");
$sync

sequence main();
play;
