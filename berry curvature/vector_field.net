//
// time: Wed May  1 18:50:49 2024
//
// version: 3.2.0 (format), 4.4.4 (DX)
//
//
//
// macro reference (direct): Arrow3D /opt/local/libexec/opendx/dx/samples/macros/Arrow3dMacro2.net
include "Arrow3dMacro2.net"
//
// MODULE main
// page assignment: Arrow3D	order=2, windowed=0, showing=0
// page assignment: Main	order=3, windowed=0, showing=1
// page assignment: Streamline	order=4, windowed=0, showing=0
// workspace: width = 723, height = 711
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node Arrow3D[1]: x = 22, y = 20, inputs = 0, label = Arrow3D
    // page group: Arrow3D
    //
main_Arrow3D_1_out_1 = 
    Arrow3D(

    ) [instance: 1, cache: 1];
    // 
    // node FileSelector[1]: x = 9, y = 6, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "/Users/James/Desktop/GitHub/MPhys-Project-Fortran/2_monopoles.dx"
    // output[2]: visible = 1, type = 32, value = "2_monopoles.dx"
    // page group: Main
    //
    // 
    // node Import[1]: x = 27, y = 100, inputs = 6, label = Import
    // page group: Main
    //
main_Import_1_out_1 = 
    Import(
    main_FileSelector_1_out_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Compute[15]: x = 125, y = 10, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "sqrt($0.0**2+$0.1**2+$0.2**2)"
    // page group: Main
    // expression: value = sqrt(a.0**2+a.1**2+a.2**2)
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_15_out_1 = 
    Compute(
    main_Compute_15_in_1,
    main_Import_1_out_1,
    main_Compute_15_in_3
    ) [instance: 15, cache: 1];
    // 
    // node Compute[1]: x = 126, y = 83, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$1>1.5*10**-10?[$0.0,$0.1,$0.2]/$1:[0,0,0]"
    // page group: Main
    // expression: value = b>1.5*10**-10?[a.0,a.1,a.2]/b:[0,0,0]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_1_out_1 = 
    Compute(
    main_Compute_1_in_1,
    main_Import_1_out_1,
    main_Compute_15_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[3]: x = 283, y = 107, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_3"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1.7 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 1.7 
    // page group: Main
    //
    // 
    // node Reduce[1]: x = 246, y = 186, inputs = 2, label = Reduce
    // input[2]: defaulting = 1, visible = 1, type = 16777221, value = { 2.0 }
    // page group: Main
    //
main_Reduce_1_out_1 = 
    Reduce(
    main_Compute_1_out_1,
    main_Scalar_3_out_1
    ) [instance: 1, cache: 1];
    // 
    // node AutoColor[1]: x = 295, y = 283, inputs = 10, label = AutoColor
    // input[2]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[4]: defaulting = 0, visible = 0, type = 5, value = 0.15
    // input[5]: defaulting = 0, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // page group: Main
    //
main_AutoColor_1_out_1,
main_AutoColor_1_out_2 = 
    AutoColor(
    main_Reduce_1_out_1,
    main_AutoColor_1_in_2,
    main_AutoColor_1_in_3,
    main_AutoColor_1_in_4,
    main_AutoColor_1_in_5,
    main_AutoColor_1_in_6,
    main_AutoColor_1_in_7,
    main_AutoColor_1_in_8,
    main_AutoColor_1_in_9,
    main_AutoColor_1_in_10
    ) [instance: 1, cache: 1];
    // 
    // node Integer[2]: x = 438, y = 50, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_2"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 24 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = -1000000
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1000000
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 24 
    // page group: Main
    //
    // 
    // node Slab[1]: x = 406, y = 125, inputs = 4, label = Slab
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "y"
    // input[3]: defaulting = 1, visible = 1, type = 1, value = 8
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 0
    // page group: Main
    //
main_Slab_1_out_1 = 
    Slab(
    main_Compute_1_out_1,
    main_Slab_1_in_2,
    main_Integer_2_out_1,
    main_Slab_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Reduce[2]: x = 318, y = 183, inputs = 2, label = Reduce
    // page group: Main
    //
main_Reduce_2_out_1 = 
    Reduce(
    main_Slab_1_out_1,
    main_Scalar_3_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Mark[4]: x = 579, y = 22, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: Main
    //
main_Mark_4_out_1 = 
    Mark(
    main_Reduce_2_out_1,
    main_Mark_4_in_2
    ) [instance: 4, cache: 1];
    // 
    // node Compute[8]: x = 570, y = 92, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0,0,$0.2]"
    // page group: Main
    // expression: value = [a.0,0,a.2]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_8_out_1 = 
    Compute(
    main_Compute_8_in_1,
    main_Mark_4_out_1,
    main_Compute_8_in_3
    ) [instance: 8, cache: 1];
    // 
    // node Unmark[3]: x = 578, y = 161, inputs = 2, label = Unmark
    // page group: Main
    //
main_Unmark_3_out_1 = 
    Unmark(
    main_Compute_8_out_1,
    main_Unmark_3_in_2
    ) [instance: 3, cache: 1];
    // 
    // node Compute[13]: x = 508, y = 254, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.1"
    // page group: Main
    // expression: value = a.1
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_13_out_1 = 
    Compute(
    main_Compute_13_in_1,
    main_Unmark_3_out_1,
    main_Compute_13_in_3
    ) [instance: 13, cache: 1];
    // 
    // node Scalar[2]: x = 436, y = 277, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_2"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.7 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.7 
    // page group: Main
    //
    // 
    // node Compute[14]: x = 490, y = 346, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0>0?(($0*$1)*[1,0.4,0.4]+(1-($0*$1))*[1,1,1]):(abs($0*$1)*[0,1,1]+(1-abs($0*$1))*[1,1,1])"
    // page group: Main
    // expression: value = a>0?((a*b)*[1,0.4,0.4]+(1-(a*b))*[1,1,1]):(abs(a*b)*[0,1,1]+(1-abs(a*b))*[1,1,1])
    // name[2]: value = a
    // name[3]: value = b
    // name[4]: value = c
    //
main_Compute_14_out_1 = 
    Compute(
    main_Compute_14_in_1,
    main_Compute_13_out_1,
    main_Scalar_2_out_1,
    main_Compute_14_in_4
    ) [instance: 14, cache: 1];
    // 
    // node Replace[1]: x = 627, y = 352, inputs = 4, label = Replace
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "data"
    // input[4]: defaulting = 0, visible = 1, type = 32, value = "colors"
    // page group: Main
    //
main_Replace_1_out_1 = 
    Replace(
    main_Compute_14_out_1,
    main_Unmark_3_out_1,
    main_Replace_1_in_3,
    main_Replace_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Mark[3]: x = 30, y = 86, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: Arrow3D
    //
main_Mark_3_out_1 = 
    Mark(
    main_Arrow3D_1_out_1,
    main_Mark_3_in_2
    ) [instance: 3, cache: 1];
    // 
    // node Compute[6]: x = 20, y = 154, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0,$0.1-0.5,$0.2]"
    // page group: Arrow3D
    // expression: value = [a.0,a.1-0.5,a.2]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_6_out_1 = 
    Compute(
    main_Compute_6_in_1,
    main_Mark_3_out_1,
    main_Compute_6_in_3
    ) [instance: 6, cache: 1];
    // 
    // node Unmark[2]: x = 24, y = 229, inputs = 2, label = Unmark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: Arrow3D
    //
main_Unmark_2_out_1 = 
    Unmark(
    main_Compute_6_out_1,
    main_Unmark_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[3]: x = 105, y = 401, inputs = 1, label = Arrow3D
    // page group: Arrow3D
    //
Arrow3D = main_Unmark_2_out_1;
    // 
    // node Receiver[3]: x = 610, y = 440, inputs = 1, label = Arrow3D
    // page group: Main
    //
main_Receiver_3_out_1[cache: 0] = Arrow3D;
    // 
    // node AutoGlyph[1]: x = 578, y = 508, inputs = 7, label = AutoGlyph
    // input[2]: defaulting = 1, visible = 1, type = 32, value = "rocket"
    // input[3]: defaulting = 0, visible = 1, type = 5, value = 10.0
    // input[4]: defaulting = 0, visible = 1, type = 5, value = 1.5
    // input[5]: defaulting = 0, visible = 1, type = 5, value = 0.0
    // page group: Main
    //
main_AutoGlyph_1_out_1 = 
    AutoGlyph(
    main_Replace_1_out_1,
    main_Receiver_3_out_1,
    main_AutoGlyph_1_in_3,
    main_AutoGlyph_1_in_4,
    main_AutoGlyph_1_in_5,
    main_AutoGlyph_1_in_6,
    main_AutoGlyph_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Collect[3]: x = 129, y = 472, inputs = 2, label = Collect
    // page group: Main
    //
main_Collect_3_out_1 = 
    Collect(
    main_Collect_3_in_1,
    main_Collect_3_in_2
    ) [instance: 3, cache: 1];
    // 
    // node Collect[2]: x = 285, y = 569, inputs = 2, label = Collect
    // page group: Main
    //
main_Collect_2_out_1 = 
    Collect(
    main_Collect_3_out_1,
    main_AutoGlyph_1_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Compute[2]: x = 27, y = 10, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[0.0, 0.044, 0.437]"
    // page group: Streamline
    // process group: Streamline
    // expression: value = [0.0, 0.044, 0.437]
    // name[2]: value = a
    //
main_Compute_2_out_1 = 
    Compute(
    main_Compute_2_in_1,
    main_Compute_2_in_2
    ) [instance: 2, cache: 1, group: "Streamline"];
    // 
    // node Grid[1]: x = 49, y = 100, inputs = 4, label = Grid
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "brick"
    // input[3]: defaulting = 0, visible = 1, type = 16777224, value = {[0.035, 0, 0], [0, 0.01, 0],[0,0,0.01]}
    // input[4]: defaulting = 0, visible = 1, type = 16777217, value = {40,1,10}
    // page group: Streamline
    // process group: Streamline
    //
main_Grid_1_out_1 = 
    Grid(
    main_Compute_2_out_1,
    main_Grid_1_in_2,
    main_Grid_1_in_3,
    main_Grid_1_in_4
    ) [instance: 1, cache: 1, group: "Streamline"];
    // 
    // node Compute[9]: x = 138, y = 10, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[0, 0.044, 0.477]"
    // page group: Streamline
    // process group: Streamline
    // expression: value = [0, 0.044, 0.477]
    // name[2]: value = a
    //
main_Compute_9_out_1 = 
    Compute(
    main_Compute_9_in_1,
    main_Compute_9_in_2
    ) [instance: 9, cache: 1, group: "Streamline"];
    // 
    // node Grid[2]: x = 160, y = 100, inputs = 4, label = Grid
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "brick"
    // input[3]: defaulting = 0, visible = 1, type = 16777224, value = {[0.035, 0, 0], [0, 0.01, 0],[0,0,0.035]}
    // input[4]: defaulting = 0, visible = 1, type = 16777217, value = {20,1,10}
    // page group: Streamline
    // process group: Streamline
    //
main_Grid_2_out_1 = 
    Grid(
    main_Compute_9_out_1,
    main_Grid_2_in_2,
    main_Grid_2_in_3,
    main_Grid_2_in_4
    ) [instance: 2, cache: 1, group: "Streamline"];
    // 
    // node Collect[4]: x = 167, y = 190, inputs = 2, label = Collect
    // page group: Streamline
    // process group: Streamline
    //
main_Collect_4_out_1 = 
    Collect(
    main_Grid_1_out_1,
    main_Grid_2_out_1
    ) [instance: 4, cache: 1, group: "Streamline"];
    // 
    // node Transmitter[4]: x = 211, y = 447, inputs = 1, label = Streamline_data
    // page group: Main
    //
Streamline_data = main_Reduce_1_out_1;
    // 
    // node Receiver[4]: x = 411, y = 199, inputs = 1, label = Streamline_data
    // page group: Streamline
    //
main_Receiver_4_out_1[cache: 0] = Streamline_data;
    // 
    // node Streamline[1]: x = 158, y = 280, inputs = 7, label = Streamline
    // input[2]: defaulting = 1, visible = 1, type = 16777224, value = NULL
    // input[3]: defaulting = 1, visible = 1, type = 16777221, value = { .0 }
    // input[6]: defaulting = 0, visible = 1, type = 3, value = 1
    // input[7]: defaulting = 0, visible = 1, type = 29, value = 1
    // page group: Streamline
    // process group: Streamline
    //
main_Streamline_1_out_1 = 
    Streamline(
    main_Receiver_4_out_1,
    main_Collect_4_out_1,
    main_Streamline_1_in_3,
    main_Streamline_1_in_4,
    main_Streamline_1_in_5,
    main_Streamline_1_in_6,
    main_Streamline_1_in_7
    ) [instance: 1, cache: 1, group: "Streamline"];
    // 
    // node Tube[1]: x = 230, y = 370, inputs = 4, label = Tube
    // input[2]: defaulting = 0, visible = 1, type = 5, value = 0.0001
    // page group: Streamline
    // process group: Streamline
    //
main_Tube_1_out_1 = 
    Tube(
    main_Streamline_1_out_1,
    main_Tube_1_in_2,
    main_Tube_1_in_3,
    main_Tube_1_in_4
    ) [instance: 1, cache: 1, group: "Streamline"];
    // 
    // node Colormap[1]: x = 293, y = 370, inputs = 19, label = Colormap
    // input[1]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.12631579] }
    // input[2]: defaulting = 0, visible = 0, type = 16777224, value = { [0.99371069 1.0] }
    // input[3]: defaulting = 0, visible = 0, type = 16777224, value = { [1.0 1.0] }
    // input[4]: defaulting = 0, visible = 0, type = 16777224, value = { [0.99371069 0.23595506] }
    // input[5]: defaulting = 0, visible = 0, type = 32, value = "Colormap_1"
    // input[7]: defaulting = 1, visible = 0, type = 5, value = -100000.0
    // input[8]: defaulting = 1, visible = 0, type = 5, value = 1e+08
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 20
    // input[12]: defaulting = 0, visible = 0, type = 16777221, value = { -100000.0 1e+08 }
    // input[17]: defaulting = 0, visible = 0, type = 5, value = NULL
    // input[18]: defaulting = 0, visible = 0, type = 5, value = NULL
    // page group: Streamline
    // process group: Streamline
    // window: position = (0.0952,0.1870), size = 0.4422x0.4891, screen = 0
    //
main_Colormap_1_out_1[cache: 2],
main_Colormap_1_out_2[cache: 2] = 
    Colormap(
    main_Colormap_1_in_1,
    main_Colormap_1_in_2,
    main_Colormap_1_in_3,
    main_Colormap_1_in_4,
    main_Colormap_1_in_5,
    main_Colormap_1_in_6,
    main_Colormap_1_in_7,
    main_Colormap_1_in_8,
    main_Colormap_1_in_9,
    main_Colormap_1_in_10,
    main_Colormap_1_in_11,
    main_Colormap_1_in_12,
    main_Colormap_1_in_13,
    main_Colormap_1_in_14,
    main_Colormap_1_in_15,
    main_Colormap_1_in_16,
    main_Colormap_1_in_17,
    main_Colormap_1_in_18,
    main_Colormap_1_in_19
    ) [instance: 1, cache: 1, group: "Streamline"];
    // 
    // node Color[2]: x = 440, y = 395, inputs = 5, label = Color
    // page group: Streamline
    // process group: Streamline
    //
main_Color_2_out_1 = 
    Color(
    main_Tube_1_out_1,
    main_Colormap_1_out_1,
    main_Colormap_1_out_2,
    main_Color_2_in_4,
    main_Color_2_in_5
    ) [instance: 2, cache: 1, group: "Streamline"];
    // 
    // node DivCurl[1]: x = 389, y = 365, inputs = 2, label = DivCurl
    // page group: Main
    //
main_DivCurl_1_out_1,
main_DivCurl_1_out_2 = 
    DivCurl(
    main_Reduce_1_out_1,
    main_DivCurl_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Shade[1]: x = 387, y = 585, inputs = 8, label = Shade
    // input[4]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 8
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 0.9
    // page group: Main
    //
main_Shade_1_out_1 = 
    Shade(
    main_Collect_2_out_1,
    main_Shade_1_in_2,
    main_Shade_1_in_3,
    main_Shade_1_in_4,
    main_Shade_1_in_5,
    main_Shade_1_in_6,
    main_Shade_1_in_7,
    main_Shade_1_in_8
    ) [instance: 1, cache: 1];
    // 
    // node Image[1]: x = 468, y = 649, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_1"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [-0.00175595 3.56501e-05 0.456152]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [-0.00175595 0.20745 0.459823]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 0.111171
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 906
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.857
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0 0.017695 -0.999843]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0001
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[22]: defaulting = 0, visible = 0, type = 32, value = "white"
    // input[25]: defaulting = 0, visible = 0, type = 32, value = "/Users/James/Desktop/berry_3.tiff"
    // input[26]: defaulting = 0, visible = 0, type = 32, value = "tiff gamma=1"
    // input[27]: defaulting = 0, visible = 0, type = 1, value = 3000
    // input[28]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[29]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[30]: defaulting = 0, visible = 0, type = 16777248, value = {"x", "y", "z"}
    // input[31]: defaulting = 0, visible = 0, type = 1, value = -20
    // input[33]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[36]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[37]: defaulting = 0, visible = 0, type = 16777248, value = {"clear", "gray", "black", "black"}
    // input[38]: defaulting = 0, visible = 0, type = 16777248, value = {"background", "grid", "ticks", "labels"}
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "rotate"
    // page group: Main
    // depth: value = 24
    // window: position = (0.4816,0.0370), size = 0.6259x0.8891, screen = 0
    // internal caching: 1
    //
main_Image_1_out_1,
main_Image_1_out_2,
main_Image_1_out_3 = 
    Image(
    main_Image_1_in_1,
    main_Shade_1_out_1,
    main_Image_1_in_3,
    main_Image_1_in_4,
    main_Image_1_in_5,
    main_Image_1_in_6,
    main_Image_1_in_7,
    main_Image_1_in_8,
    main_Image_1_in_9,
    main_Image_1_in_10,
    main_Image_1_in_11,
    main_Image_1_in_12,
    main_Image_1_in_13,
    main_Image_1_in_14,
    main_Image_1_in_15,
    main_Image_1_in_16,
    main_Image_1_in_17,
    main_Image_1_in_18,
    main_Image_1_in_19,
    main_Image_1_in_20,
    main_Image_1_in_21,
    main_Image_1_in_22,
    main_Image_1_in_23,
    main_Image_1_in_24,
    main_Image_1_in_25,
    main_Image_1_in_26,
    main_Image_1_in_27,
    main_Image_1_in_28,
    main_Image_1_in_29,
    main_Image_1_in_30,
    main_Image_1_in_31,
    main_Image_1_in_32,
    main_Image_1_in_33,
    main_Image_1_in_34,
    main_Image_1_in_35,
    main_Image_1_in_36,
    main_Image_1_in_37,
    main_Image_1_in_38,
    main_Image_1_in_39,
    main_Image_1_in_40,
    main_Image_1_in_41,
    main_Image_1_in_42,
    main_Image_1_in_43,
    main_Image_1_in_44,
    main_Image_1_in_45,
    main_Image_1_in_46,
    main_Image_1_in_47,
    main_Image_1_in_48,
    main_Image_1_in_49
    ) [instance: 1, cache: 1];
    // 
    // node ShowConnections[1]: x = 10, y = 280, inputs = 1, label = ShowConnections
    // page group: Streamline
    // process group: Streamline
    //
main_ShowConnections_1_out_1 = 
    ShowConnections(
    main_Collect_4_out_1
    ) [instance: 1, cache: 1, group: "Streamline"];
    // 
    // node Transmitter[1]: x = 158, y = 520, inputs = 1, label = connections
    // page group: Streamline
    //
connections = main_ShowConnections_1_out_1;
    // 
    // node Receiver[1]: x = 24, y = 387, inputs = 1, label = connections
    // page group: Main
    //
main_Receiver_1_out_1[cache: 0] = connections;
    // 
    // node Transmitter[2]: x = 342, y = 517, inputs = 1, label = Streamline
    // page group: Streamline
    //
Streamline = main_Color_2_out_1;
    // 
    // node Receiver[2]: x = 127, y = 388, inputs = 1, label = Streamline
    // page group: Main
    //
main_Receiver_2_out_1[cache: 0] = Streamline;
// network: end of macro body
CacheScene(main_Image_1_in_1, main_Image_1_out_1, main_Image_1_out_2);
}
main_Arrow3D_1_out_1 = NULL;
main_FileSelector_1_out_1 = "/Users/James/Desktop/GitHub/MPhys-Project-Fortran/2_monopoles.dx";
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = NULL;
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Compute_15_in_1 = "sqrt($0.0**2+$0.1**2+$0.2**2)";
main_Compute_15_in_3 = NULL;
main_Compute_15_out_1 = NULL;
main_Compute_1_in_1 = "$1>1.5*10**-10?[$0.0,$0.1,$0.2]/$1:[0,0,0]";
main_Compute_1_out_1 = NULL;
main_Scalar_3_in_1 = "Scalar_3";
main_Scalar_3_in_2 = NULL;
main_Scalar_3_in_3 = 1.7 ;
main_Scalar_3_in_4 = NULL;
main_Scalar_3_in_5 = NULL;
main_Scalar_3_in_6 = NULL;
main_Scalar_3_in_7 = NULL;
main_Scalar_3_in_8 = NULL;
main_Scalar_3_in_9 = NULL;
main_Scalar_3_in_10 = NULL;
main_Scalar_3_in_11 = NULL;
main_Scalar_3_out_1 = 1.7 ;
main_Reduce_1_out_1 = NULL;
main_AutoColor_1_in_2 = 1.0;
main_AutoColor_1_in_3 = NULL;
main_AutoColor_1_in_4 = 0.15;
main_AutoColor_1_in_5 = 0.0;
main_AutoColor_1_in_6 = 1.0;
main_AutoColor_1_in_7 = NULL;
main_AutoColor_1_in_8 = NULL;
main_AutoColor_1_in_9 = NULL;
main_AutoColor_1_in_10 = NULL;
main_Integer_2_in_1 = "Integer_2";
main_Integer_2_in_2 = NULL;
main_Integer_2_in_3 = 24 ;
main_Integer_2_in_4 = NULL;
main_Integer_2_in_5 = NULL;
main_Integer_2_in_6 = NULL;
main_Integer_2_in_7 = NULL;
main_Integer_2_in_8 = NULL;
main_Integer_2_in_9 = NULL;
main_Integer_2_in_10 = NULL;
main_Integer_2_in_11 = NULL;
main_Integer_2_out_1 = 24 ;
main_Slab_1_in_2 = "y";
main_Slab_1_in_4 = 0;
main_Slab_1_out_1 = NULL;
main_Reduce_2_out_1 = NULL;
main_Mark_4_in_2 = "positions";
main_Mark_4_out_1 = NULL;
main_Compute_8_in_1 = "[$0.0,0,$0.2]";
main_Compute_8_in_3 = NULL;
main_Compute_8_out_1 = NULL;
main_Unmark_3_in_2 = NULL;
main_Unmark_3_out_1 = NULL;
main_Compute_13_in_1 = "$0.1";
main_Compute_13_in_3 = NULL;
main_Compute_13_out_1 = NULL;
main_Scalar_2_in_1 = "Scalar_2";
main_Scalar_2_in_2 = NULL;
main_Scalar_2_in_3 = 0.7 ;
main_Scalar_2_in_4 = NULL;
main_Scalar_2_in_5 = NULL;
main_Scalar_2_in_6 = NULL;
main_Scalar_2_in_7 = NULL;
main_Scalar_2_in_8 = NULL;
main_Scalar_2_in_9 = NULL;
main_Scalar_2_in_10 = NULL;
main_Scalar_2_in_11 = NULL;
main_Scalar_2_out_1 = 0.7 ;
main_Compute_14_in_1 = "$0>0?(($0*$1)*[1,0.4,0.4]+(1-($0*$1))*[1,1,1]):(abs($0*$1)*[0,1,1]+(1-abs($0*$1))*[1,1,1])";
main_Compute_14_in_4 = NULL;
main_Compute_14_out_1 = NULL;
main_Replace_1_in_3 = "data";
main_Replace_1_in_4 = "colors";
main_Replace_1_out_1 = NULL;
main_Mark_3_in_2 = "positions";
main_Mark_3_out_1 = NULL;
main_Compute_6_in_1 = "[$0.0,$0.1-0.5,$0.2]";
main_Compute_6_in_3 = NULL;
main_Compute_6_out_1 = NULL;
main_Unmark_2_in_2 = "positions";
main_Unmark_2_out_1 = NULL;
main_Transmitter_3_out_1 = NULL;
main_Receiver_3_out_1 = NULL;
main_AutoGlyph_1_in_3 = 10.0;
main_AutoGlyph_1_in_4 = 1.5;
main_AutoGlyph_1_in_5 = 0.0;
main_AutoGlyph_1_in_6 = NULL;
main_AutoGlyph_1_in_7 = NULL;
main_AutoGlyph_1_out_1 = NULL;
main_Collect_3_in_1 = NULL;
main_Collect_3_in_2 = NULL;
main_Collect_3_out_1 = NULL;
main_Collect_2_out_1 = NULL;
main_Compute_2_in_1 = "[0.0, 0.044, 0.437]";
main_Compute_2_in_2 = NULL;
main_Compute_2_out_1 = NULL;
main_Grid_1_in_2 = "brick";
main_Grid_1_in_3 = {[0.035, 0, 0], [0, 0.01, 0],[0,0,0.01]};
main_Grid_1_in_4 = {40,1,10};
main_Grid_1_out_1 = NULL;
main_Compute_9_in_1 = "[0, 0.044, 0.477]";
main_Compute_9_in_2 = NULL;
main_Compute_9_out_1 = NULL;
main_Grid_2_in_2 = "brick";
main_Grid_2_in_3 = {[0.035, 0, 0], [0, 0.01, 0],[0,0,0.035]};
main_Grid_2_in_4 = {20,1,10};
main_Grid_2_out_1 = NULL;
main_Collect_4_out_1 = NULL;
main_Transmitter_4_out_1 = NULL;
main_Receiver_4_out_1 = NULL;
main_Streamline_1_in_3 = NULL;
main_Streamline_1_in_4 = NULL;
main_Streamline_1_in_5 = NULL;
main_Streamline_1_in_6 = 1;
main_Streamline_1_in_7 = 1;
main_Streamline_1_out_1 = NULL;
main_Tube_1_in_2 = 0.0001;
main_Tube_1_in_3 = NULL;
main_Tube_1_in_4 = NULL;
main_Tube_1_out_1 = NULL;
main_Colormap_1_in_1 = { [0.0 0.12631579] };
main_Colormap_1_in_2 = { [0.99371069 1.0] };
main_Colormap_1_in_3 = { [1.0 1.0] };
main_Colormap_1_in_4 = { [0.99371069 0.23595506] };
main_Colormap_1_in_5 = "Colormap_1";
main_Colormap_1_in_6 = NULL;
main_Colormap_1_in_7 = NULL;
main_Colormap_1_in_8 = NULL;
main_Colormap_1_in_9 = NULL;
main_Colormap_1_in_10 = NULL;
main_Colormap_1_in_11 = NULL;
main_Colormap_1_in_12 = { -100000.0 1e+08 };
main_Colormap_1_in_13 = NULL;
main_Colormap_1_in_14 = NULL;
main_Colormap_1_in_15 = NULL;
main_Colormap_1_in_16 = NULL;
main_Colormap_1_in_17 = NULL;
main_Colormap_1_in_18 = NULL;
main_Colormap_1_in_19 = NULL;
main_Colormap_1_out_1 = NULL;
main_Colormap_1_out_2 = NULL;
main_Color_2_in_4 = NULL;
main_Color_2_in_5 = NULL;
main_Color_2_out_1 = NULL;
main_DivCurl_1_in_2 = NULL;
main_Shade_1_in_2 = NULL;
main_Shade_1_in_3 = NULL;
main_Shade_1_in_4 = NULL;
main_Shade_1_in_5 = NULL;
main_Shade_1_in_6 = NULL;
main_Shade_1_in_7 = NULL;
main_Shade_1_in_8 = NULL;
main_Shade_1_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_1_in_1 = "Image_1";
main_Image_1_in_3 = "X24,,";
main_Image_1_in_4 = 1;
main_Image_1_in_5 = [-0.00175595 3.56501e-05 0.456152];
main_Image_1_in_6 = [-0.00175595 0.20745 0.459823];
main_Image_1_in_7 = 0.111171;
main_Image_1_in_8 = 906;
main_Image_1_in_9 = 0.857;
main_Image_1_in_10 = [0 0.017695 -0.999843];
main_Image_1_in_11 = NULL;
main_Image_1_in_12 = 0;
main_Image_1_in_13 = NULL;
main_Image_1_in_14 = 1;
main_Image_1_in_15 = NULL;
main_Image_1_in_16 = NULL;
main_Image_1_in_17 = NULL;
main_Image_1_in_18 = NULL;
main_Image_1_in_19 = 0;
main_Image_1_in_20 = NULL;
main_Image_1_in_21 = NULL;
main_Image_1_in_22 = "white";
main_Image_1_in_23 = NULL;
main_Image_1_in_25 = "/Users/James/Desktop/berry_3.tiff";
main_Image_1_in_26 = "tiff gamma=1";
main_Image_1_in_27 = 3000;
main_Image_1_in_28 = 1.0;
main_Image_1_in_29 = 1;
main_Image_1_in_30 = {"x", "y", "z"};
main_Image_1_in_31 = -20;
main_Image_1_in_32 = NULL;
main_Image_1_in_33 = 0;
main_Image_1_in_34 = NULL;
main_Image_1_in_35 = NULL;
main_Image_1_in_36 = 0;
main_Image_1_in_37 = {"clear", "gray", "black", "black"};
main_Image_1_in_38 = {"background", "grid", "ticks", "labels"};
main_Image_1_in_39 = NULL;
main_Image_1_in_40 = NULL;
main_Image_1_in_41 = "rotate";
main_Image_1_in_42 = NULL;
main_Image_1_in_43 = NULL;
main_Image_1_in_44 = NULL;
main_Image_1_in_45 = NULL;
main_Image_1_in_46 = NULL;
main_Image_1_in_47 = NULL;
main_Image_1_in_48 = NULL;
main_Image_1_in_49 = NULL;
main_ShowConnections_1_out_1 = NULL;
main_Transmitter_1_out_1 = NULL;
main_Transmitter_2_out_1 = NULL;
Executive("product version 4 4 4");
$sync
main();
